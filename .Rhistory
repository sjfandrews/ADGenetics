width = 9, height = 2, just = c("left", "top")
)
pageCreate(width = 9, height = 3.5, default.units = "inches")
plotGG(
plot = locus.p,
x = 0.46, y = 1.55,
width = 8.54, height = 2.75, just = c("left", "top")
)
plotGG(
plot = upset.p,
x = 0, y = 0,
width = 9, height = 2, just = c("left", "top")
)
png("~/Dropbox/Research/PostDoc-MSSM/Neurogenomics/plots/AD_upset.png", width = 9, height = 4.5, units = "in", res = 300)
pageCreate(width = 9, height = 3.5, default.units = "inches")
plotGG(
plot = locus.p,
x = 0.46, y = 1.55,
width = 8.54, height = 2.5, just = c("left", "top")
)
plotGG(
plot = upset.p,
x = 0, y = 0,
width = 9, height = 2, just = c("left", "top")
)
pageGuideHide()
dev.off()
# Effective sample size
## https://github.com/neurogenomics/MungeSumstats/blob/master/R/compute_sample_size_neff.R
## meta data
adgwas <- tribble(
~study, ~year, ~neff, ~n, ~n_pca, ~n_ca, ~n_cn, ~n_loci, ~ancestry, ~cohorts, ~notes,
"Lambert", 2013, NA, 74046, NA, 17008, 37154, 19, NA, NA, NA,
"Kunkle", 2019, NA, 94437, NA, 35274, 59163, 24, NA, NA, NA,
"Marioni", 2018, NA, 377012, NA, (27696 + 14338 + 25580), (37154 + 245941), 26, NA, NA, NA,
"Jansen", 2019, NA, 455258, NA, (24087 + 47793), (55058 + 328320), 29, NA, NA, NA,
"Wightman", 2021, NA, 1126563, NA, 90338, 1036225, 38, NA, NA, NA,
"Bellenguez", 2022, NA, 528781, NA, (39106 + 46828 + 25392), (401577 + 276086), 75, NA, NA, NA,
"Naj", 2021, NA, NA, NA, (25170 + 20301 + 35214), (41052 + 21839 + 180791), 29, NA, NA, "29 in stage 1 + 2; 24 w/ UKB in stage 3",
"Corder", 1993, 0, 1, NA, 1, 1, NA, NA, NA, NA,
"Jonsson", 2012, 0, 1, NA, 1, 1, NA, NA, NA, NA,
) %>%
mutate(neff = 1 / ((1/n_ca) + (1/n_cn)))
adgwas
upset.dat <- ad_loci %>%
filter(study %nin% c("Jonsson", "Reiman")) %>%
filter(!is.na(locus)) %>%
expand(study, locus) %>%
left_join(select(ad_loci, study, locus, CHR, BP, P)) %>%
left_join(ad_genes, by = "locus") %>%
arrange(CHR, BP) %>%
mutate(label = glue("{locus} ({gene})"),
sig = ifelse(is.na(P), FALSE, TRUE),
sig = ifelse(gene == "APOE", TRUE, sig),
study = fct_relevel(study, "Lambert", "Marioni", "Jansen", "Kunkle", "Wightman", "Bellenguez"),
locus = fct_inorder(locus),
label = fct_inorder(label),
gene = fct_inorder(gene),
y = case_when(
study == "Lambert" ~ 1,
study == "Marioni" ~ 2,
study == "Jansen" ~ 3,
study == "Kunkle" ~ 4,
study == "Wightman" ~ 5,
study == "Bellenguez" ~ 6,
),
y_text = 1
)
upset.dat
filter(upset.dat, CHR ==  6, BP == 41129207)
filter(, study == "Bellenguez", gene == "TREM2")
filter(upset.dat, study == "Bellenguez", gene == "TREM2")
upset.dat %>%
group_by(study, locus)
upset.dat %>%
group_by(study, locus) %>%
sum(n_sig = sum(sig))
upset.dat %>%
group_by(study, locus) %>%
sum(n_sig = sum(sig))
upset.dat %>%
group_by(study, locus)
upset.dat %>%
group_by(study, locus) %>%
summarize(n_sig = sum(sig))
upset.sig <- upset.dat %>%
group_by(study, locus) %>%
summarize(n_sig = sum(sig))
upset.sig <- upset.dat %>%
group_by(study, locus) %>%
summarize(n_sig = sum(sig)) %>%
ungroup()
upset.sig
ggplot(upset.sig, aes(y = study, x = gene, color = n_sig)) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light()
upset.sig <- upset.dat %>%
group_by(study, locus) %>%
summarize(n_sig = sum(sig), gene = first(gene)) %>%
ungroup()
upset.sig
ggplot(upset.sig, aes(y = study, x = gene, color = n_sig)) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light()
ggplot(upset.sig, aes(y = study, x = gene, color = n_sig)) +
geom_stripped_rows(colour = "NA")
ggplot(upset.sig, aes(y = study, x = gene, color = n_sig)) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point()
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light()
upset.p <- ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light() +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "#cb181d", "black")) +
labs(x = "locus") +
theme(
text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
upset.p
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light() +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "#cb181d", "black"))
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light() +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "#cb181d", "black"))
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light() +
scale_color_manual(values = c("grey75", "black", "black", "#fcae91", "#fb6a4a", "#cb181d"))
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "black", "#fb6a4a", "#cb181d")) +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light()
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
theme_light()
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point() +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light()
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
# geom_point() +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
# geom_point() +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig)))
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
# geom_point() +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light()
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus")
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
upset.p
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
text = element_text(size = theme.size, family = "sans"),
# axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
# axis.title.y = element_blank(),
# axis.title.x = element_blank(),
# panel.grid.major.y = element_blank(),
# panel.grid.major.x = element_blank(),
# legend.position = "none"
)
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
# text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
upset.p
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
# text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
upset.p <- ggplot(upset.sig, aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_stripped_rows(colour = "NA") +
# geom_stripped_cols(colour = "NA") +
geom_point(data = filter(upset.sig, n_sig == 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
geom_segment(data = test_lines, aes(x = gene, y = start, xend = gene, yend = end, colour = "segment")) +
geom_point(data = filter(upset.sig, n_sig > 0), aes(y = study, x = gene, color = as.factor(n_sig))) +
# geom_point(data = trem2, aes(y = study, x = gene), color = "red") +
scale_color_manual(values = c("grey75", "black", "#fcae91", "#fb6a4a", "black", "#cb181d")) +
theme_light() +
labs(x = "locus") +
theme(
# text = element_text(size = theme.size, family = "sans"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none"
)
png("~/Dropbox/Research/PostDoc-MSSM/Neurogenomics/plots/AD_upset2.png", width = 9, height = 4.5, units = "in", res = 300)
pageCreate(width = 9, height = 3.5, default.units = "inches")
plotGG(
plot = locus.p,
x = 0.46, y = 1.55,
width = 8.54, height = 2.5, just = c("left", "top")
)
plotGG(
plot = upset.p,
x = 0, y = 0,
width = 9, height = 2, just = c("left", "top")
)
pageGuideHide()
dev.off()
locus.p
locus.p <- ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
family = "sans", color = "grey30") +
# geom_text(data = test, aes(y = y_text+0.1, x = label, label = gene),
#           angle = 90, vjust = 0.5, hjust = 0, size = geom.text.size,
#           family = "sans", color = "grey30") +
# coord_cartesian(ylim=c(0.98,1)) +
coord_fixed(ratio = 500, ylim=c(0.97,1)) +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
)
locus.p
png("~/Dropbox/Research/PostDoc-MSSM/Neurogenomics/plots/AD_upset2.png", width = 9, height = 4.5, units = "in", res = 300)
pageCreate(width = 9, height = 3.5, default.units = "inches")
plotGG(
plot = locus.p,
x = 0.46, y = 1.55,
width = 8.54, height = 2.5, just = c("left", "top")
)
plotGG(
plot = upset.p,
x = 0, y = 0,
width = 9, height = 2, just = c("left", "top")
)
pageGuideHide()
dev.off()
pageCreate(width = 9, height = 3.5, default.units = "inches")
plotGG(
plot = locus.p,
x = 0.46, y = 1.55,
width = 8.54, height = 2.5, just = c("left", "top")
)
ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
family = "sans", color = "grey30") +
# geom_text(data = test, aes(y = y_text+0.1, x = label, label = gene),
#           angle = 90, vjust = 0.5, hjust = 0, size = geom.text.size,
#           family = "sans", color = "grey30") +
# coord_cartesian(ylim=c(0.98,1)) +
coord_fixed(ratio = 500, ylim=c(0.97,1))
upset.dat
ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
family = "sans", color = "grey30")
ggplot(upset.dat, aes(y = y_text, x = label))
ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
family = "sans", color = "grey30")
ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
color = "grey30")
locus.p <- ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
color = "grey30") +
# geom_text(data = test, aes(y = y_text+0.1, x = label, label = gene),
#           angle = 90, vjust = 0.5, hjust = 0, size = geom.text.size,
#           family = "sans", color = "grey30") +
# coord_cartesian(ylim=c(0.98,1)) +
coord_fixed(ratio = 500, ylim=c(0.97,1)) +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()
)
png("~/Dropbox/Research/PostDoc-MSSM/Neurogenomics/plots/AD_upset2.png", width = 9, height = 4.5, units = "in", res = 300)
pageCreate(width = 9, height = 3.5, default.units = "inches")
plotGG(
plot = locus.p,
x = 0.46, y = 1.55,
width = 8.54, height = 2.5, just = c("left", "top")
)
plotGG(
plot = upset.p,
x = 0, y = 0,
width = 9, height = 2, just = c("left", "top")
)
pageGuideHide()
dev.off()
windowsFonts()
windowsFonts()
ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
family = "Courier", color = "grey30")
ggplot(upset.dat, aes(y = y_text, x = label)) +
geom_text(data = upset.dat, aes(y = y_text, x = label, label = locus),
angle = 90, vjust = 0.5, hjust = 1, size = geom.text.size,
family = "sans", color = "grey30")
fonttable <- read.table(header=TRUE, sep=",", stringsAsFactors=FALSE,
text='
Short,Canonical
mono,Courier
sans,Helvetica
serif,Times
,AvantGarde
,Bookman
,Helvetica-Narrow
,NewCenturySchoolbook
,Palatino
,URWGothic
,URWBookman
,NimbusMon
URWHelvetica,NimbusSan
,NimbusSanCond
,CenturySch
,URWPalladio
URWTimes,NimbusRom
')
fonttable$pos <- 1:nrow(fonttable)
library(reshape2)
fonttable <- melt(fonttable, id.vars="pos", measure.vars=c("Short","Canonical"),
variable.name="NameType", value.name="Font")
# Make a table of faces. Make sure factors are ordered correctly
facetable <- data.frame(Face = factor(c("plain","bold","italic","bold.italic"),
levels = c("plain","bold","italic","bold.italic")))
fullfonts <- merge(fonttable, facetable)
library(ggplot2)
pf <- ggplot(fullfonts, aes(x=NameType, y=pos)) +
geom_text(aes(label=Font, family=Font, fontface=Face)) +
facet_wrap(~ Face, ncol=2)
pf
